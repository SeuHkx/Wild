@import '../namespace/namespace';
@import '../theme/theme.default';

//function
@function strip-units($number){
  @return $number / ($number * 0 + 1);
}

@function toREM($target) {
  @return strip-units($target) / strip-units($html-font-set-size) * 1rem;
}

//mixin
@mixin box-sizing($value) {
  box-sizing: $value;
}

@mixin tap-highlight() {
  -webkit-tap-highlight-color: transparent !important;
  -webkit-tap-highlight-color: $tap-highlight-color;
}

@mixin text-size-adjust() {
  text-size-adjust : 100%;
}

@mixin font-size($target) {
  font-size: $target;
  font-size: (strip-units($target)/100) * 1rem;
}

@mixin appearance($value) {
  appearance : $value;
}

@mixin border-radius($value) {
  border-radius: $value;
}

@mixin focus-shadow() {
  box-shadow: 0 0 8px rgba(0,0,0,.18),0 8px 16px rgba(0,0,0,.36);
}

@mixin shadow-2dp() {
  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, $shadow-key-penumbra-opacity),
  0 3px 1px -2px rgba(0, 0, 0, $shadow-key-umbra-opacity),
  0 1px 5px 0 rgba(0, 0, 0, $shadow-ambient-shadow-opacity);
}
@mixin shadow-3dp() {
  box-shadow: 0 3px 4px 0 rgba(0, 0, 0, $shadow-key-penumbra-opacity),
  0 3px 3px -2px rgba(0, 0, 0, $shadow-key-umbra-opacity),
  0 1px 8px 0 rgba(0, 0, 0, $shadow-ambient-shadow-opacity);
}
@mixin shadow-4dp() {
  box-shadow: 0 4px 5px 0 rgba(0, 0, 0, $shadow-key-penumbra-opacity),
  0 1px 10px 0 rgba(0, 0, 0, $shadow-ambient-shadow-opacity),
  0 2px 4px -1px rgba(0, 0, 0, $shadow-key-umbra-opacity);
}
@mixin shadow-6dp() {
  box-shadow: 0 6px 10px 0 rgba(0, 0, 0, $shadow-key-penumbra-opacity),
  0 1px 18px 0 rgba(0, 0, 0, $shadow-ambient-shadow-opacity),
  0 3px 5px -1px rgba(0, 0, 0, $shadow-key-umbra-opacity);
}
@mixin shadow-8dp() {
  box-shadow: 0 8px 10px 1px rgba(0, 0, 0, $shadow-key-penumbra-opacity),
  0 3px 14px 2px rgba(0, 0, 0, $shadow-ambient-shadow-opacity),
  0 5px 5px -3px rgba(0, 0, 0, $shadow-key-umbra-opacity);
}

@mixin shadow-16dp() {
  box-shadow: 0 16px 24px 2px rgba(0, 0, 0, $shadow-key-penumbra-opacity),
  0  6px 30px 5px rgba(0, 0, 0, $shadow-ambient-shadow-opacity),
  0  8px 10px -5px rgba(0, 0, 0, $shadow-key-umbra-opacity);
}

@mixin shadow-24dp() {
  box-shadow: 0  9px 46px  8px rgba(0, 0, 0, $shadow-key-penumbra-opacity),
  0 11px 15px -7px rgba(0, 0, 0, $shadow-ambient-shadow-opacity),
  0 24px 38px  3px rgba(0, 0, 0, $shadow-key-umbra-opacity);
}

@mixin md-button-type($name,$opts-bg-color,$opts-color,$opts-color-default) {
  #{$ns}-button--#{$name} {
    &#{$ns}-button {
      color: $opts-color-default;
    }
    &#{$ns}-button--raised {
      background-color: $opts-bg-color;
      color: $opts-color;
      &:hover {
        background-color: $opts-bg-color;
      }
    }
    &#{$ns}-button--fab {
      @extend &#{$ns}-button--raised;
    }
  }
}

@mixin widthCompatible ($type,$width,$padding){
  @if $type == 'min' {
    #{$type}-width: $width - $padding * 2 \9;
  }
  @if $type == 'max' {
    #{$type}-width: $width - $padding * 2 \9;
  }
}

@mixin md-button-group-type ($name,$bd-color,$bd-disabled-color){
  #{$ns}-button-group {
    background-color: $bd-color \9;
    > #{$ns}-button {
      &#{$ns}-button--#{$name} {
        border-left : 1px solid darken($bd-color,8%) \9;
        border-right: 1px solid darken($bd-color,8%) \9;
        &#{$ns}-button--disabled {
          border-left : 1px solid darken($bd-disabled-color,8%) \9;
          border-right: 1px solid darken($bd-disabled-color,8%) \9;
        }
        &:not(:first-child):not(:last-child) {
          border-left : 1px solid darken($bd-color,8%);
        }
        &:last-child {
          border-left : 1px solid darken($bd-color,8%);
        }
      }
    }
  }
}
@mixin md-button-size ($name,$height,$padding,$size){
  &--#{$name} {
    height: $height;
    height: toREM($height);
    line-height: $height;
    line-height: toREM($height);

    padding: 0 $padding;
    padding: 0 toREM($padding);
    @include font-size($size);
  }
  @if $name == 'large' {
    &--small {
      &#{$ns}-button--fab {
        min-width: $height;
        min-width: toREM($height);
        width: $height;
        width: toREM($height);

        height: $height;
        height: toREM($height);
        line-height: $height;
        line-height: toREM($height);
        padding: 0;
      }
    }
  }
  @if $name == 'mini' {
    &--mini {
      &#{$ns}-button--fab {
        min-width: $height;
        min-width: toREM($height);
        width: $height;
        width: toREM($height);

        height: $height;
        height: toREM($height);
        line-height: $height;
        line-height: toREM($height);
        padding: 0;
      }
    }
  }
}

//tag
@mixin tag-type ($name,$bg-color,$bd-color,$color){
  #{$ns}-tag--#{$name} {
    background-color: $bg-color;
    border-color: $bd-color;
    color: $color;
  }
}

@mixin clear (){
  &:before,&:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
  }
}

@mixin clearGutter ($child){
  & {
    font-size: 0;
    letter-spacing:-6px;
    letter-spacing:- toREM(6px);
    *font-size:0;
    *letter-spacing:normal;
    *word-spacing:-1px;
    > #{$child} {
        *display:inline;
        zoom:1;
        font-size: medium;
        letter-spacing:normal;
        *word-spacing:normal;
        vertical-align: top;
    }
  }
}

@mixin setProp ($prop,$value){
  & {
    #{$prop}:$value;
    @if type-of($value) == 'number' {
      #{$prop} : toREM($value);
    }
  }
}
