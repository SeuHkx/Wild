//设置文字大小
@mixin setTextSize() {
  $font-index: 6;
  $font-size: 12;
  @while $font-index > 0 {
    h#{$font-index},.wd-h#{$font-index}{
      font-size: $font-size + px;
      small,.wd-small{
        font-size: 65%;
      }
    }
    $font-index :  $font-index - 1;
    $font-size  :  $font-size  + 2;
  }
}
//清除浮动
@mixin setClear(){
  .wd-utils-clear{
    zoom: 1;
    &:before,&:after{
      content: "";
      display: table;
    }
    &:after{
      clear: both;
    }
  }
}
//设置文字基本,首要颜色
@mixin setTextColor($p,$s,$t){
  .wd-utils-txt--primary{
    color: $p;
  }
  .wd-utils-txt--secondary{
    color:$s;
  }
  .wd-utils-txt--tip{
    color: $t;
  }
}
//设置文字对齐方式
@mixin setTextAlign(){
  @each $props in left,right,center,justify{
    .wd-utils-text--#{$props}{
      text-align: $props;
    }
  }
}
//设置阴影
@mixin setBoxShadow($val,$val-deep,$val-hover){
  .wd-utils-bs{
    @include box-shadow($val);
  }
  .wd-utils-bs--deep{
    @include box-shadow($val-deep)
  }
  .wd-utils-bs--hover{
    @include box-shadow($val-hover);
  }
}
//设置文字转换
@mixin setTextTransform(){
  @each $props in lowercase,uppercase,capitalize{
    .wd-utils-text--#{$props}{
      text-transform: $props;
    }
  }
}
//设置按钮主题
@mixin setButtonTheme($name,$color,$bgColor,$bdColor){
  .wd-button--#{$name}{
    color: $color;
    background-color: $bgColor;
    border-color: darken($bdColor,2%);
    &:hover{
      color: $color;
      background-color: lighten($bgColor,4%);//#fafafa;
      border-color: lighten($bdColor,6%);    //#ccc;
    }
    &:active{
      background-color: darken($bgColor,4%);//#fafafa;
      border-color: darken($bdColor,4%);//#ccc;
    }
  }
}
//设置按钮大小
@mixin setButtonSize(){
  @each $name,$size,$padding in
                  ('tiny',10px,1px 4px),
                  ('sm',12px,3px 6px),
                  ('lg',16px,8px 12px),
                  ('jumbo',18px,10px 14px) {
    .wd-button--#{$name}{
      font-size: $size;
      padding: $padding;
    }
  }
}
//设置组按钮主题
@mixin setGroupButton-theme($name,$color,$bgColor,$bdColor){
  .wd-button-group{
    &.wd-button--#{$name}{
      background-color: transparent;
      .wd-button{
        color: $color;
        background-color: $bgColor;
        border-color: $bdColor;
        &:hover{
          color: $color;
          background-color: darken($bgColor,4%);//#fafafa;
          border-color: darken($bdColor,6%);    //#ccc;
        }
        &:active{
          background-color: darken($bgColor,8%);//#fafafa;
          border-color: darken($bdColor,10%);//#ccc;
        }
      }
    }
  }
}
//设置组按钮大小
@mixin setGroupButton(){
  @each $name,$size,$padding in
                  ('tiny',10px,1px 4px),
                  ('sm',12px,3px 6px),
                  ('lg',16px,8px 12px),
                  ('jumbo',18px,10px 14px) {
    .wd-button-group{
      &.wd-button--#{$name}{
        padding: 0;
        .wd-button{
          font-size: $size;
          padding: $padding;
        }
      }
    }
  }
}
//设置下拉主题
@mixin setDropdonw-theme($name,$color,$bgColor){
  .wd-dropdown--#{$name}{
    li{
      >a{
        &:hover{
          color: $color;
          text-decoration: none;
          background-color: $bgColor;
        }
      }
    }
  }
}
//设置气泡主题
@mixin setBadgeTheme($name,$bgColor){
  .wd-badge--#{$name}{
    background-color: $bgColor;
  }
}
//设置文字不被选中
@mixin user-select(){
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}
//设置阴影
@mixin box-shadow($shadow...){
  box-shadow: $shadow;
}
@mixin setPull-float($name){
  @if $name == left{
    .wd-utils-#{$name}{
      float: $name;
    }
  }@else if $name == right{
    .wd-utils-#{$name}{
      float: $name;
    }
  }
}
//设置块状元素居中
@mixin setCenterBlock(){
  .wd-utils-center-block{
    display: block;
    margin-left: auto;
    margin-right: auto;
  }
}
//设置文字省略
@mixin setTextOverflow(){
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
@mixin border-top-radius($props,$radius){
  border-top-#{$props}-radius: $radius;
}
@mixin border-bottom-radius($props,$radius){
  border-bottom-#{$props}-radius: $radius;
}
@mixin border-radius($radius){
  border-radius: $radius;
}
//css3 过渡
@mixin transition($prop,$time){
  transition: $prop $time;
}